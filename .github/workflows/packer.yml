name: Packer

env:
  MYSQL_HOSTNAME: ${{secrets.MYSQL_HOSTNAME}}
  MYSQL_PASSWORD: ${{secrets.MYSQL_ROOT_PASSWORD}}
  MYSQL_DATABASENAME: ${{secrets.MYSQL_DATABASENAME}}
  MYSQL_USERNAME: ${{secrets.MYSQL_USERNAME}}
  SALT_ROUNDS: ${{secrets.SALT_ROUNDS}}
  PORT: ${{secrets.PORT}}

on:
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  packer-check:
    name: Packer CI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Cloud SDK
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_PACKER_CREDENTIALS }}
          project_id: ${{secrets.GCP_PROJECT_ID}}

      - name: Get credentials file path
        run: echo $GOOGLE_APPLICATION_CREDENTIALS

      - name: Install Packer
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install packer

      - name: Zip Node.js application
        run: |
          npm run zip

      - name: Initialize Packer
        run: |
          cd packer
          packer init .

      - name: Run packer fmt
        run: |
          FILE="setup.pkr.hcl"
          cd packer
          packer fmt -check $FILE
          if [ $? -ne 0 ]; then
              echo "Packer file is not correctly formatted. Please run 'packer fmt'"
              exit 1
          fi

      - name: Run packer validate
        run: |
          FILE="setup.pkr.hcl"
          cd packer
          packer validate -var "credentials=$GOOGLE_APPLICATION_CREDENTIALS" -var "project_id=${{secrets.GCP_PROJECT_ID}}" -var "MYSQL_PASSWORD=${{secrets.MYSQL_ROOT_PASSWORD}}" -var "MYSQL_DATABASENAME=${{secrets.MYSQL_DATABASENAME}}" -var "MYSQL_USERNAME=${{secrets.MYSQL_USERNAME}}" -var "MYSQL_HOSTNAME=${{secrets.MYSQL_HOSTNAME}}" -var "SALT_ROUNDS=${{secrets.SALT_ROUNDS}}" -var "PORT=${{secrets.PORT}}" $FILE
          if [ $? -ne 0 ]; then
              echo "Packer file is not valid. Please fix the template."
              exit 1
          fi

      - name: Build packer file
        run: |
          FILE="setup.pkr.hcl"
          cd packer
          packer build -force -var "credentials=$GOOGLE_APPLICATION_CREDENTIALS" -var "project_id=${{secrets.GCP_PROJECT_ID}}" -var "MYSQL_PASSWORD=${{secrets.MYSQL_ROOT_PASSWORD}}" -var "MYSQL_DATABASENAME=${{secrets.MYSQL_DATABASENAME}}" -var "MYSQL_USERNAME=${{secrets.MYSQL_USERNAME}}" -var "MYSQL_HOSTNAME=${{secrets.MYSQL_HOSTNAME}}" -var "SALT_ROUNDS=${{secrets.SALT_ROUNDS}}" -var "PORT=${{secrets.PORT}}" $FILE || exit 1

      - name: Get Latest Image ID
        run: |
          latest_image_id=$(gcloud compute images list --sort-by=creationTimestamp --format='value(id)' --limit=1)
          echo "latest_image_id=$latest_image_id" >> $GITHUB_ENV

      - name: Create instance template
        id: create-template
        run: |
          TEMPLATE_NAME="webapp-template-$(date +%Y%m%d%H%M%S)"
          echo "TEMPLATE_NAME=$TEMPLATE_NAME" >> $GITHUB_ENV

          sql_hostname=$(gcloud secrets versions access latest --secret=mysql-host)
          sql_password=$(gcloud secrets versions access latest --secret=mysql-password)


          gcloud compute instance-templates create $TEMPLATE_NAME \
              --machine-type=e2-standard-2 \
              --instance-template-region=us-east1 \
              --region=us-east1 \
              --tags=webapp \
              --image=csye-centos-8-1 \
              --boot-disk-size=40 \
              --boot-disk-type=pd-ssd \
              --boot-disk-device-name=terraform-instance \
              --network=csye6225-vpc \
              --subnet=webapp \
              --service-account=ops-agent@${{secrets.GCP_PROJECT_ID}}.iam.gserviceaccount.com \
              --scopes=https://www.googleapis.com/auth/logging.write,https://www.googleapis.com/auth/monitoring.write,https://www.googleapis.com/auth/pubsub,https://www.googleapis.com/auth/cloudkms \
              --no-boot-disk-auto-delete \
              --boot-disk-kms-key=projects/csye6225-dev-414900/locations/us-east1/keyRings/webapp-key-ring-2/cryptoKeys/crypto-key-vm-2 \
              --metadata startup-script='#!/bin/bash
              if [ ! -f /opt/webapp/.env ]; then
                  sudo echo "MYSQL_HOSTNAME=$sql_hostname" | sudo tee -a /opt/webapp/.env
                  sudo echo "MYSQL_PASSWORD=$sql_password" | sudo tee -a /opt/webapp/.env
                  sudo echo "MYSQL_DATABASENAME=webapp" | sudo tee -a /opt/webapp/.env
                  sudo echo "MYSQL_USERNAME=webapp" | sudo tee -a /opt/webapp/.env
                  sudo echo "PORT=8080" | sudo tee -a /opt/webapp/.env
                  sudo echo "SALT_ROUNDS=10" | sudo tee -a /opt/webapp/.env
              fi
              sudo touch /opt/finish.txt
              sudo chown -R csye6225:csye6225 /opt/webapp/
              sudo chmod 700 /opt/webapp/' \
              --quiet

      - name: Assign new template to instance group manager
        run: |
          gcloud compute instance-groups managed set-instance-template instance-group-manager \
          --template=${{env.TEMPLATE_NAME}} \
          --region=us-east1
